#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Test_Thuyet_Trinh_Oauth2.Models
{
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Data;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Linq;
    using System.Linq.Expressions;
    using System.ComponentModel;
    using System;


    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "test_oauth2")]
    public partial class MyDataDataContext : System.Data.Linq.DataContext
    {

        private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

        #region Extensibility Method Definitions
        partial void OnCreated();
        partial void InsertUser(User instance);
        partial void UpdateUser(User instance);
        partial void DeleteUser(User instance);
        #endregion

        public MyDataDataContext() :
                base(global::System.Configuration.ConfigurationManager.ConnectionStrings["test_oauth2ConnectionString"].ConnectionString, mappingSource)
        {
            OnCreated();
        }
        public MyDataDataContext(string connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public MyDataDataContext(System.Data.IDbConnection connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public MyDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public MyDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public System.Data.Linq.Table<User> Users
        {
            get
            {
                return this.GetTable<User>();
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Users")]
    public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _id;

        private string _username;

        private string _email;

        private string _password;

        private string _fullname;

        private string _provide;

        private string _provide_id;

        private string _Token;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnidChanging(int value);
        partial void OnidChanged();
        partial void OnusernameChanging(string value);
        partial void OnusernameChanged();
        partial void OnemailChanging(string value);
        partial void OnemailChanged();
        partial void OnpasswordChanging(string value);
        partial void OnpasswordChanged();
        partial void OnfullnameChanging(string value);
        partial void OnfullnameChanged();
        partial void OnprovideChanging(string value);
        partial void OnprovideChanged();
        partial void Onprovide_idChanging(string value);
        partial void Onprovide_idChanged();
        partial void OnTokenChanging(string value);
        partial void OnTokenChanged();
        #endregion

        public User()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_id", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int id
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnidChanging(value);
                    this.SendPropertyChanging();
                    this._id = value;
                    this.SendPropertyChanged("id");
                    this.OnidChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_username", DbType = "NVarChar(100)")]
        public string username
        {
            get
            {
                return this._username;
            }
            set
            {
                if ((this._username != value))
                {
                    this.OnusernameChanging(value);
                    this.SendPropertyChanging();
                    this._username = value;
                    this.SendPropertyChanged("username");
                    this.OnusernameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_email", DbType = "NVarChar(MAX)")]
        public string email
        {
            get
            {
                return this._email;
            }
            set
            {
                if ((this._email != value))
                {
                    this.OnemailChanging(value);
                    this.SendPropertyChanging();
                    this._email = value;
                    this.SendPropertyChanged("email");
                    this.OnemailChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_password", DbType = "NVarChar(MAX)")]
        public string password
        {
            get
            {
                return this._password;
            }
            set
            {
                if ((this._password != value))
                {
                    this.OnpasswordChanging(value);
                    this.SendPropertyChanging();
                    this._password = value;
                    this.SendPropertyChanged("password");
                    this.OnpasswordChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_fullname", DbType = "NVarChar(150)")]
        public string fullname
        {
            get
            {
                return this._fullname;
            }
            set
            {
                if ((this._fullname != value))
                {
                    this.OnfullnameChanging(value);
                    this.SendPropertyChanging();
                    this._fullname = value;
                    this.SendPropertyChanged("fullname");
                    this.OnfullnameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_provide", DbType = "NVarChar(50)")]
        public string provide
        {
            get
            {
                return this._provide;
            }
            set
            {
                if ((this._provide != value))
                {
                    this.OnprovideChanging(value);
                    this.SendPropertyChanging();
                    this._provide = value;
                    this.SendPropertyChanged("provide");
                    this.OnprovideChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_provide_id", DbType = "VarChar(MAX)")]
        public string provide_id
        {
            get
            {
                return this._provide_id;
            }
            set
            {
                if ((this._provide_id != value))
                {
                    this.Onprovide_idChanging(value);
                    this.SendPropertyChanging();
                    this._provide_id = value;
                    this.SendPropertyChanged("provide_id");
                    this.Onprovide_idChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Token", DbType = "VarChar(MAX)")]
        public string Token
        {
            get
            {
                return this._Token;
            }
            set
            {
                if ((this._Token != value))
                {
                    this.OnTokenChanging(value);
                    this.SendPropertyChanging();
                    this._Token = value;
                    this.SendPropertyChanged("Token");
                    this.OnTokenChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
}
#pragma warning restore 1591
